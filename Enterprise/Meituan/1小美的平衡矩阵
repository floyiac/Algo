1.
小美的平衡矩阵
小美拿到了一个
𝑛
∗
𝑛
n∗n的矩阵，其中每个元素是 0 或者 1。
小美认为一个矩形区域是完美的，当且仅当该区域内 0 的数量恰好等于 1 的数量。
现在，小美希望你回答有多少个
𝑖
∗
𝑖
i∗i的完美矩形区域。你需要回答
1≤𝑖≤n
1≤i≤n的所有答案。
时间限制：C/C++ 1秒，其他语言2秒
空间限制：C/C++ 256M，其他语言512M
输入描述：
第一行输入一个正整数n，代表矩阵大小。
接下来的n行，每行输入一个长度为n的 01 串，用来表示矩阵。
1\leq n \leq 200
输出描述：
输出n行，第i行输出i*i的完美矩形区域的数量。
示例1
输入例子：
4
1010
0101
1100
0011
输出例子：
0
7
0
1

代码解释
输入处理：

使用 scanner.Scan() 逐行读取输入。
第一个输入行读取矩阵大小 n。
随后的 n 行读取矩阵内容，将其存储在 matrix 二维切片中。
前缀和数组计算：

初始化 prefixSumZero 和 prefixSumOne 数组，用于存储0和1的前缀和。
计算前缀和数组的值，方便后续子矩形的快速查询。
遍历所有可能的子矩形：

对于每个可能的子矩形大小，从 1x1 到 nxn，计算子矩形中0和1的数量。
使用前缀和数组快速计算子矩形中的0和1的数量。
检查子矩形是否满足条件：

对于每个子矩形，如果0的数量等于1的数量，则计数加一。
记录每个大小的完美子矩形的数量。
输出结果：

打印每个大小的完美子矩形的数量。
通过这种方式，我们可以高效地计算出所有大小的完美子矩形的数量

prefixSum[i][j] 表示从矩阵左上角 (0, 0) 到 (i-1, j-1) 的所有元素的和